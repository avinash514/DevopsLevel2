---

- name: Reset Kubernetes component
  shell: "kubeadm reset --force"
  register: reset_cluster

- name: start firewall
  shell: "systemctl start firewalld"
  ignore_errors: yes

- name: Enable 6443/tcp port
  shell: "firewall-cmd --permanent --add-port=6443/tcp"
  ignore_errors: yes

- name: Enable 2379-2380/tcp ports
  shell: "firewall-cmd --permanent --add-port=2379-2380/tcp"
  ignore_errors: yes

- name: Enable 10250/tcp port
  shell: "firewall-cmd --permanent --add-port=10250/tcp"
  ignore_errors: yes

- name: Enable 10251/tcp port
  shell: "firewall-cmd --permanent --add-port=10251/tcp"
  ignore_errors: yes

- name: Enable 10252/tcp port
  shell: "firewall-cmd --permanent --add-port=10252/tcp"
  ignore_errors: yes

- name: Enable 10255/tcp port
  shell: "firewall-cmd --permanent --add-port=10255/tcp"
  ignore_errors: yes

- name: Enable 10253/tcp port
  shell: "firewall-cmd --permanent --add-port=10253/tcp"
  ignore_errors: yes

- name: Enable 80/tcp port
  shell: "firewall-cmd --permanent --add-port=80/tcp"
  ignore_errors: yes

- name: Enable 179/TCP port
  shell: "firewall-cmd --permanent --add-port=179/tcp"
  ignore_errors: yes

- name: Enable 4789/UDP port
  shell: "firewall-cmd --permanent --add-port=4789/udp"
  ignore_errors: yes

- name: Enable 5473/TCP port
  shell: "firewall-cmd --permanent --add-port=5473/tcp"
  ignore_errors: yes

- name: Enable 2379/TCP port
  shell: "firewall-cmd --permanent --add-port=2379/tcp"
  ignore_errors: yes

- name: Reload Firewall
  shell: "firewall-cmd --reload"
  ignore_errors: yes

#- name: stop firewall
#  shell: "systemctl stop firewalld"
#  ignore_errors: yes

- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: |
    kubeadm init \
                 --kubernetes-version {{ kube_version }} \
                 --pod-network-cidr {{ pod_network_cidr }} \
                 --token {{ token }} \
                 --apiserver-advertise-address {{ master_ip }} \
                 --ignore-preflight-errors {{ cpuCheck }} \
                 {{ kubeadm_opts }} \
                 {{ init_opts }}
  register: init_cluster

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded
  copy:
    src: "{{ kubeadmin_config }}"
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true

- name: Deploy kubernetes dashboard into cluster
  when: init_cluster is succeeded and enable_dashboard
  command: |
    kubectl --kubeconfig={{ kubeadmin_config }} \
        apply -f {{ dashboard_url }} 
  register: create_result
  until: create_result.rc == 0
  retries: 5
  delay: 2
  ignore_errors: true

- name: Creating service account for dashboard
  when: create_result is succeeded and enable_dashboard
  command: |
    kubectl create serviceaccount cluster-admin-dashboard-sa --kubeconfig={{ kubeadmin_config }}
  register: create_serviceaccount
  ignore_errors: true

- name: Create Cluster rolebinding
  when: create_serviceaccount is succeeded and enable_dashboard
  command: |
    kubectl create clusterrolebinding cluster-admin-dashboard-sa \
        --clusterrole=cluster-admin \
        --serviceaccount=default:cluster-admin-dashboard-sa \
        --kubeconfig={{ kubeadmin_config }}
  ignore_errors: true
